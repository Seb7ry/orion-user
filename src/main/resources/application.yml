# ===========================================
# ORION USER SERVICE - Simplified Configuration
# Uses centralized environment variables from .env files
# ===========================================

server:
  port: ${SERVER_PORT:8092}

spring:
  application:
    name: ${SERVICE_NAME:orion-user}

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  # MongoDB Configuration - Uses centralized variables
  data:
    mongodb:
      uri: ${MONGODB_URI}

  # Docker Compose (disabled by default)
  docker:
    compose:
      enabled: false

# External Services Configuration - All from .env
orion:
  services:
    program-service-url: ${PROGRAM_SERVICE_URL}
    connection-timeout: ${SERVICE_CONNECTION_TIMEOUT:5s}
    read-timeout: ${SERVICE_READ_TIMEOUT:10s}
    max-retries: ${SERVICE_MAX_RETRIES:3}
    retry-delay: ${SERVICE_RETRY_DELAY:500ms}
    failure-rate-threshold: ${SERVICE_FAILURE_RATE:50.0}
    minimum-number-of-calls: ${SERVICE_MIN_CALLS:5}
    wait-duration-in-open-state: ${SERVICE_CIRCUIT_WAIT:30s}
    cache-enabled: ${SERVICE_CACHE_ENABLED:false}
    cache-ttl: ${SERVICE_CACHE_TTL:5m}
    cache-max-size: ${SERVICE_CACHE_MAX_SIZE:100}
    strict-email-validation: ${USER_STRICT_EMAIL_VALIDATION:true}
    email-domain: ${USER_EMAIL_DOMAIN:@unibague.edu.co}
    password-min-length: ${USER_PASSWORD_MIN_LENGTH:8}
    require-strong-password: ${USER_REQUIRE_STRONG_PASSWORD:true}

# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

# Application Info - Uses centralized variables
info:
  app:
    name: ${SERVICE_NAME:Orion User Service}
    description: User Management and Authentication for Orion Microservices
    version: 1.0.0
    features:
      - User Registration
      - Role Management
      - Authentication
      - Password Management
      - Program Assignment

# Logging Configuration - Uses centralized variables
logging:
  level:
    com.unibague.gradework: ${LOG_LEVEL:INFO}
    org.springframework.web: ${WEB_LOG_LEVEL:INFO}
    org.springframework.data.mongodb: ${MONGODB_LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
    root: ${LOGGING_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId}] %logger{36} - %msg%n"

---
# ===========================================
# DEVELOPMENT PROFILE - Enhanced debugging
# ===========================================
spring:
  config:
    activate:
      on-profile: dev

# Development-specific settings
logging:
  level:
    com.unibague.gradework: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG

# Development database (if needed)
# spring:
#   data:
#     mongodb:
#       uri: mongodb://localhost:27017/oriondb_dev

---
# ===========================================
# DOCKER PROFILE - Production ready
# ===========================================
spring:
  config:
    activate:
      on-profile: docker

# All Docker configuration comes from environment variables
# No hardcoded values here

---
# ===========================================
# PRODUCTION PROFILE - Optimized for performance
# ===========================================
spring:
  config:
    activate:
      on-profile: prod

# Production-specific settings
logging:
  level:
    root: WARN
    com.unibague.gradework: INFO
    org.springframework.security: WARN

# Production optimizations
orion:
  services:
    cache-enabled: true
    cache-ttl: 10m
    cache-max-size: 500