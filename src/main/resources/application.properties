# Service Information
spring.application.name=orion-user
# The name of the Spring Boot application.
# This is used to identify the service in distributed systems, such as in Eureka.

server.port=8092
# The port on which this application will run.
# Default port for this service is 8092. Modify as needed for different environments.

# Database Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/oriondb
# The URI for connecting to the MongoDB database.
# "localhost" refers to the database host, and "27017" is the default MongoDB port.
# Replace these values with the actual host and port for production environments.
# "oriondb" is the name of the database being used.

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# The URL of the Eureka server for service registration and discovery.
# The application will register itself with the Eureka server at this address.

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
# A unique identifier for this service instance in the Eureka registry.
# Combines the application name with a randomly generated UUID.

eureka.instance.hostname=localhost
# The hostname of this service instance for Eureka registration.
# Replace "localhost" with the actual hostname or IP address in production environments.

eureka.instance.prefer-ip-address=true
# Configures Eureka to use the IP address instead of the hostname when resolving this service.

# Docker Compose Setting
spring.docker.compose.enabled=false
# Enables or disables Docker Compose integration in Spring Boot.
# Set this to "true" if deploying the application using Docker Compose.
# When enabled, the application can integrate with other services defined in a `docker-compose.yml` file.